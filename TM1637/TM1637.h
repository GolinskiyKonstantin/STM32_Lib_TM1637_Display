/*

  ******************************************************************************
  * @file 			( фаил ):   TM1637.h
  * @brief 		( описание ):  	Управление 7-сегментным 4 разрядным дисплеем через TM1637
  ******************************************************************************
  * @attention 	( внимание ):	
  ******************************************************************************
  
*/

#ifndef _TM1637_H
#define _TM1637_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ----------------------------------------------------------*/

// Обязательно нужен #include "main.h" 
// чтоб отдельно не подключать файлы связанные с МК и стандартными библиотеками
#include "main.h"

/* Functions prototypes ----------------------------------------------*/


/*
	******************************************************************************
	* @brief	 ( описание ):  Функция задержки в миклосекундах
	* @param	( параметры ):	Кол-во микросекунд
	* @return  ( возвращает ):	

	******************************************************************************
*/
void Delay_us (uint32_t i);
//--------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Функция для начала передачи команд или данных (активация )
	* @param	( параметры ):	
	* @return  ( возвращает ):	

	******************************************************************************
*/
void TM1637_Generate_START (void);
//--------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Функция для конца передачи команд или данных ( окончание передачи )
	* @param	( параметры ):	
	* @return  ( возвращает ):	

	******************************************************************************
*/
void TM1637_Generate_STOP (void);
//--------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Функция передачи данных или коменд
	* @param	( параметры ):	1 байт данных или коменд
	* @return  ( возвращает ):	
					//ПЕРЕДАЧА ОТ МЛАДШЕГО К СТРАШЕМУ!!!НЕ СТАНДАРТ
	******************************************************************************
*/
void TM1637_WriteData (	uint8_t oneByte);
//-----------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  меняем число  на его позицию  в массиве digitToSegment
	* @param	( параметры ):	1 байт цифра для отображения
	* @return  ( возвращает ):	1 байт из массива digitToSegment который формирует указаную цифру 
						( лед блоки на матрице )для отображения
		
	******************************************************************************
*/
int8_t TM1637_coding(uint8_t DispData);
//--------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  меняем массив чискл от 1 до 4  на его позицию  в массиве digitToSegment
	* @param	( параметры ):	массив цифр для отображения
	* @return  ( возвращает ):	массив цифр из массива digitToSegment который формирует указануые цифры
						( лед блоки на матрице )для отображения
		
	******************************************************************************
*/
void TM1637_coding_all(uint8_t DispData[]);
//-------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  разбиваем число на "сегменты" ввели 251 получили 2 5 1 для каждого сигмента
	* @param	( параметры ):	1 пар. само число, 2 пар. массив для хранения уже с разбитыми отдельными цыфрами
	* @return  ( возвращает ):			
	******************************************************************************
*/
void separate_Digit_to_digits(int16_t Digit,uint8_t SegArray[]);
//------------------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  отображает один символ из массива
	* @param	( параметры ):	1 пар. номер позиции сегмент ( от 0 до 3 )
								2 пар. число которое хотим отобразить
	* @return  ( возвращает ):			
	******************************************************************************
*/
void TM1637_display(uint8_t Seg_N, int8_t DispData);
//----------------------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  отображение чисел от -999 до 9999
	* @param	( параметры ):	число от 1 до 4 разрядов от -999 до 9999
	* @return  ( возвращает ):			
	******************************************************************************
*/
void TM1637_display_all(uint16_t Digit);
//------------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Включение и отключение экрана
	* @param	( параметры ):	1 ВКЛ     0 ВЫКЛ
	* @return  ( возвращает ):			
	******************************************************************************
*/
void TM1637_displayOnOff(uint8_t OnOff);
//-----------------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Отчистка дисплея
	* @param	( параметры ):	
	* @return  ( возвращает ):			
	******************************************************************************
*/
void TM1637_clearDisplay(void);
//---------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Яркость дисплея
	* @param	( параметры ):	режим яркости от 0 до 7 ( 0-мин    7-мах)
	* @return  ( возвращает ):			
	******************************************************************************
*/
void TM1637_brightness(uint8_t brightness);
//---------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ):  Отображение в виде часов 4 разряда
	* @param	( параметры ):	1 пар. часы   2 пар. минуты
	* @return  ( возвращает ):			
	******************************************************************************
*/
void TM1637_displayTime(uint8_t hours,uint8_t minutes);	
//------------------------------------------------------------------------------------

/*
	ПРИМЕР
	
	TM1637_brightness(7);	// Ставим яркость дисплея
	TM1637_clearDisplay();	// Очищаем дисплей
	TM1637_display(0,2);	// Устанавливаем в первый сигмент цифру 2
	TM1637_display_all(257);// Устанавливаем на весь дисплей число 257
	TM1637_displayTime(17,20);
	
*/

#ifdef __cplusplus
}
#endif

#endif	/*	_TM1637_H */

/************************ (C) COPYRIGHT GKP *****END OF FILE****/
